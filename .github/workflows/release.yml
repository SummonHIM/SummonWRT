#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build SummonWrt Releases

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://git.openwrt.org/openwrt/openwrt.git
  REPO_BRANCH: v21.02.3
  FEEDS_CONF: feeds.conf.default
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_FIRMWARE_WORKFLOW: false
  UPLOAD_FIRMWARE_COWTRANSFER: false
  UPLOAD_FIRMWARE_WETRANSFER: false
  UPLOAD_FIRMWARE_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build-x86_64:
    name: Build SummonWrt x86_64
    runs-on: ubuntu-22.04
    env: 
      CONFIG_FILE: x86_64.config

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/SummonHIM/SummonWrt/master/Scripts/build-ubuntu-2204)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Check space usage before compile
      run: |
        cd openwrt
        df -hT $PWD
        echo "SPACE_LEFT=$(df $PWD | tail -1 | awk '{print $4}')" >> $GITHUB_ENV

    - name: Compile the firmware
      id: compile
      if: env.SPACE_LEFT >= 31457280
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j $(($(nproc)+1)) world
        echo "::set-output name=status::success"
        echo "DEVICE_NAME=-$(grep '^CONFIG_TARGET_BOARD=".*"' .config | sed -r 's/.*"(.*)".*/\1/')-$(grep '^CONFIG_TARGET_SUBTARGET=".*"' .config | sed -r 's/.*"(.*)".*/\1/')-$(grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/')" >> $GITHUB_ENV
        echo "FILE_DATE=-$GITHUB_RUN_NUMBER-$(date +"%y%m%d")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: openwrt-bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        tar -zvcf packages${{ env.DEVICE_NAME }}.tar.gz packages/*
        rm -rf packages
        mv config.buildinfo config${{ env.DEVICE_NAME }}.buildinfo
        mv feeds.buildinfo feeds${{ env.DEVICE_NAME }}.buildinfo
        mv sha256sums sha256sums${{ env.DEVICE_NAME }}
        mv version.buildinfo version${{ env.DEVICE_NAME }}.buildinfo
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_WORKFLOW == 'true' && !cancelled()
      with:
        name: openwrt-firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

    - name: Generate release tag
      id: tag
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$GITHUB_RUN_NUMBER"
        touch release.txt
        echo "## Build Date" >> release.txt
        echo $(date +"%Y.%m.%d-%H:%M:%S") >> release.txt
        echo "## Changelog" >> release.txt
        echo "[Check Commits](https://github.com/SummonHIM/SummonWrt/compare/$(expr $GITHUB_RUN_NUMBER - 1)...$GITHUB_RUN_NUMBER)" >> release.txt
        [ $UPLOAD_FIRMWARE_COWTRANSFER = true || $UPLOAD_FIRMWARE_WETRANSFER = true ] && echo "# Other Download Methood" >> release.txt
        [ $UPLOAD_FIRMWARE_COWTRANSFER = true ] && echo "ðŸ”— [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_FIRMWARE_WETRANSFER = true ] && echo "ðŸ”— [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Release of SummonWrt Build ${{ github.run_number }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 9

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_FIRMWARE_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 9
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-r2s:
    name: Build SummonWrt Rockchip RK3328 NanoPi R2S
    runs-on: ubuntu-22.04
    env: 
      CONFIG_FILE: r2s.config

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/SummonHIM/SummonWrt/master/Scripts/build-ubuntu-2204)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Check space usage before compile
      run: |
        cd openwrt
        df -hT $PWD
        echo "SPACE_LEFT=$(df $PWD | tail -1 | awk '{print $4}')" >> $GITHUB_ENV

    - name: Compile the firmware
      id: compile
      if: env.SPACE_LEFT >= 26214400
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j $(($(nproc)+1)) world
        echo "::set-output name=status::success"
        echo "DEVICE_NAME=-$(grep '^CONFIG_TARGET_BOARD=".*"' .config | sed -r 's/.*"(.*)".*/\1/')-$(grep '^CONFIG_TARGET_SUBTARGET=".*"' .config | sed -r 's/.*"(.*)".*/\1/')-$(grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/')" >> $GITHUB_ENV
        echo "FILE_DATE=-$GITHUB_RUN_NUMBER-$(date +"%y%m%d")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: openwrt-bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        tar -zvcf packages${{ env.DEVICE_NAME }}.tar.gz packages/*
        rm -rf packages
        mv config.buildinfo config${{ env.DEVICE_NAME }}.buildinfo
        mv feeds.buildinfo feeds${{ env.DEVICE_NAME }}.buildinfo
        mv sha256sums sha256sums${{ env.DEVICE_NAME }}
        mv version.buildinfo version${{ env.DEVICE_NAME }}.buildinfo
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_WORKFLOW == 'true' && !cancelled()
      with:
        name: openwrt-firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

    - name: Generate release tag
      id: tag
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$GITHUB_RUN_NUMBER"
        touch release.txt
        echo "## Build Date" >> release.txt
        echo $(date +"%Y.%m.%d-%H:%M:%S") >> release.txt
        echo "## Changelog" >> release.txt
        echo "[Check Commits](https://github.com/SummonHIM/SummonWrt/compare/$(expr $GITHUB_RUN_NUMBER - 1)...$GITHUB_RUN_NUMBER)" >> release.txt
        [ $UPLOAD_FIRMWARE_COWTRANSFER = true || $UPLOAD_FIRMWARE_WETRANSFER = true ] && echo "# Other Download Methood" >> release.txt
        [ $UPLOAD_FIRMWARE_COWTRANSFER = true ] && echo "ðŸ”— [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_FIRMWARE_WETRANSFER = true ] && echo "ðŸ”— [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Release of SummonWrt Build ${{ github.run_number }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 9

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_FIRMWARE_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 9
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-rm2100:
    name: Build SummonWrt MT7621 Xiaomi Redmi Router AC2100
    runs-on: ubuntu-22.04
    env: 
      CONFIG_FILE: rm2100.config

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/SummonHIM/SummonWrt/master/Scripts/build-ubuntu-2204)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Check space usage before compile
      run: |
        cd openwrt
        df -hT $PWD
        echo "SPACE_LEFT=$(df $PWD | tail -1 | awk '{print $4}')" >> $GITHUB_ENV

    - name: Compile the firmware
      id: compile
      if: env.SPACE_LEFT >= 26214400
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j $(($(nproc)+1)) world
        echo "::set-output name=status::success"
        echo "DEVICE_NAME=-$(grep '^CONFIG_TARGET_BOARD=".*"' .config | sed -r 's/.*"(.*)".*/\1/')-$(grep '^CONFIG_TARGET_SUBTARGET=".*"' .config | sed -r 's/.*"(.*)".*/\1/')-$(grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/')" >> $GITHUB_ENV
        echo "FILE_DATE=-$GITHUB_RUN_NUMBER-$(date +"%y%m%d")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: openwrt-bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        tar -zvcf packages${{ env.DEVICE_NAME }}.tar.gz packages/*
        rm -rf packages
        mv config.buildinfo config${{ env.DEVICE_NAME }}.buildinfo
        mv feeds.buildinfo feeds${{ env.DEVICE_NAME }}.buildinfo
        mv sha256sums sha256sums${{ env.DEVICE_NAME }}
        mv version.buildinfo version${{ env.DEVICE_NAME }}.buildinfo
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_WORKFLOW == 'true' && !cancelled()
      with:
        name: openwrt-firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

    - name: Generate release tag
      id: tag
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$GITHUB_RUN_NUMBER"
        touch release.txt
        echo "## Build Date" >> release.txt
        echo $(date +"%Y.%m.%d-%H:%M:%S") >> release.txt
        echo "## Changelog" >> release.txt
        echo "[Check Commits](https://github.com/SummonHIM/SummonWrt/compare/$(expr $GITHUB_RUN_NUMBER - 1)...$GITHUB_RUN_NUMBER)" >> release.txt
        [ $UPLOAD_FIRMWARE_COWTRANSFER = true || $UPLOAD_FIRMWARE_WETRANSFER = true ] && echo "# Other Download Methood" >> release.txt
        [ $UPLOAD_FIRMWARE_COWTRANSFER = true ] && echo "ðŸ”— [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_FIRMWARE_WETRANSFER = true ] && echo "ðŸ”— [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Release of SummonWrt Build ${{ github.run_number }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 9

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_FIRMWARE_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 9
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}